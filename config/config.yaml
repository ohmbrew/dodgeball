#config_version=6

hardware:
  platform: p3_roc
  driverboards: pdb
  #servo_controllers: pololu_maestro

# define servo and min/max ranges
# pololu_maestro:
#   port: /dev/ttyACM0  # lower ttyACMX is the USB command port, higher one is for TTL serial port. We use lower.
#   servo_min: 2300
#   servo_max: 9700

# define display
displays:
  window:
    height: 2160
    width: 3840
window:
  height: 2160
  width: 3840
  fullscreen: false
  borderless: false
  show_cursor: false
  exit_on_escape: True

config:
  - lights.yaml
  - coils.yaml
  - switches.yaml
  #- sounds.yaml
  - playervars.yaml

modes:
  - base
  # - global
  # - field

widget_styles:
  attract_mode_high_score_display_label:
    font_size: 60
    font_name: druillet
    anchor_x: left
    anchor_y: top
    x: left + 15
    bold: true
    color: 008ce5ff
  attract_mode_high_score_display_name:
    font_size: 60
    font_name: druillet
    anchor_x: center
    anchor_y: top
    x: center
    bold: true
    color: 008ce5ff
  attract_mode_high_score_display_score:
    font_size: 60
    font_name: druillet
    anchor_x: right
    anchor_y: top
    x: right - 15
    number_grouping: true
    min_digits: 1
    color: 008ce5ff
  bf_blue:
    font_size: 100
    font_name: druillet
    anchor_x: center
    anchor_y: top
    color: 008ce5ff

slides:
  video_gameover_slide:
    widgets:
    # - type: image
    #   image: background-flag
    #- type: video
    #  video: seeyoulater
    - type: text
      text: BYE!
  video_champion_slide:
    widgets:
    - type: text
      text: Champion!

keyboard:
  s:
    switch: s_start_p1
  b:
    switch: s_flipper_left
  n:
    switch: s_flipper_right

# documentation: https://docs.missionpinball.org/en/latest/hardware/multimorphic/leds.html
p_roc:
  pd_led_boards:
    1:
      use_ws281x_2: true
      ws281x_2_first_address: 100
      ws281x_2_last_address: 449
      use_ws281x_0: true
      ws281x_0_first_address: 450
      ws281x_0_last_address: 599

# servos:
#   servo_release:
#     number: 3
#     servo_min: 0.35       # 1105 us, far right
#     servo_max: 0.55       # 1480 us, far left
#     positions:
#       1.0: release_left
#       0.0: release_right  
#     reset_position: 0.0
#     reset_events: mode_attract_started
#     debug: true

sound_system:
  tracks:
    music:
      type: standard
      simultaneous_sounds: 3
      volume: 1.0
    voice:
      type: standard
      simultaneous_sounds: 3
      volume: 1.0
    sfx:
      type: standard
      simultaneous_sounds: 8
      volume: 1.0
assets:
  sounds:
    default:
      load: on_demand
    music:
      track: music
    sfx:
      track: sfx
    voice:
      track: voice
  # TODO: Make Dodgeball Intro video
  # videos:
  #   beerfest_intro1:
  #     file: BeerfestIntro.mp4

# TODO: I don't think I'll need flippers, so just commenting this out just in case
# have two sets of flipper definitions. One for normal playing, another for when player activates flipperflop mode
# flippers:
#   # normal
#   flipper_left:
#     main_coil: c_flipper_left
#     activation_switch: s_flipper_left
#     enable_events: flippers_normal
#     disable_events: flippers_flopped, game_ending
#   flipper_right:
#     main_coil: c_flipper_right
#     activation_switch: s_flipper_right
#     enable_events: flippers_normal
#     disable_events: flippers_flopped, game_ending

ball_devices:
  # TODO: Don't think I need a drain, but...
  # bd_drain:
  #   ball_switches: s_drain
  #   eject_coil: c_drain_eject
  #   eject_targets: bd_trough
  #   eject_timeouts: 2s
  #   tags: drain
  bd_trough:
    ball_switches: s_trougheject_p1
    eject_coil: c_trougheject_p1
    eject_targets: playfield
    tags: home, trough
    mechanical_eject: true
    eject_timeouts: 2s
    debug: true
  bd_catch_p1:
    ball_switches: s_catch_p1
    eject_coil: c_catch_p1
    eject_timeouts: 1s
  bd_catch_p2:
    ball_switches: s_catch_p2
    eject_coil: c_catch_p2
    eject_timeouts: 1s

  # TODO: Might need two of these. Or two troughs?
  # bd_plunger_lane:
  #   ball_switches: s_plunger_lane
  #   eject_targets: playfield
  #   mechanical_eject: true
  #   eject_timeouts: 5s
  #   debug: true

ball_holds:
  catch_p1:
    balls_to_hold: 1
    hold_devices: bd_catch_p1
    release_one_events: catch_p1_eject
  catch_p2:
    balls_to_hold: 1
    hold_devices: bd_catch_p2
    release_one_events: catch_p2_eject

queue_relay_player:
  game_ending{device.counters.has_highscore.completed == False}:
    post: drain_gameover_nohighscore
    wait_for: gameover_video_complete
  game_ending{device.counters.has_highscore.completed == True}:
    post: drain_gameover_highscore
    wait_for: gameover_video_complete 

show_player:
  # TODO: This needs to change to releasing balls from servo, etc
  # show_release_p1:
  #   pongtable_releaseall_show:
  #     loops: 0
  # pongcup_1_release_show:
  #   pongtable_show:
  #     show_tokens:
  #       cup: 1
  #     loops: 0
  drain_gameover_nohighscore:
    show_gameover_nohighscore:
      loops: 0
  drain_gameover_highscore:
    show_gameover_highscore:
      loops: 0
    
shows:
  show_gameover_nohighscore:
    - time: 0
      slides: video_gameover_slide
    - time: '+4.5'
      events: video_gameover_complete
  show_gameover_highscore:
    - time: 0
      slides: video_champion_slide
    - time: '+6.5'
      events: video_gameover_complete

playfields:
  playfield:
    tags: default
    default_source_device: bd_trough

counters:
  has_highscore:
    count_events: got_highscore
    count_complete_value: 1
    starting_count: 0
    reset_on_complete: False
    reset_events: game_started

virtual_platform_start_active_switches: s_trougheject_p1, s_trougheject_p2
